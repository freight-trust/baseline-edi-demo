{{- $nodeNumber := "node1" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "besu.fullname" . }}-{{ $nodeNumber }}privacy
  labels:
    app: {{ template "besu.name" . }}
    chart: {{ template "besu.chart" . }}
    component: {{ $nodeNumber }}privacy
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Values.namespace }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.node.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "besu.name" . }}
      release: {{ .Release.Name }}
      component: {{ $nodeNumber }}privacy
  serviceName: "{{ $nodeNumber }}privacy-service"
  template:
    metadata:
      labels:
        app: {{ template "besu.name" . }}
        release: {{ .Release.Name }}
        component: {{ $nodeNumber }}privacy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9545"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
      - name: init-bootnode
        image: pegasyseng/k8s-helper:v1.18.4
        env:
          - name: VALIDATOR1_SERVICE_HOST
            value: "$({{ template "besu.upperfullname" . }}_VALIDATOR1_SERVICE_HOST)"
        command:
          - "sh"
          - "-c"
          - "curl -X GET --connect-timeout 30 --max-time 10 --retry 6 --retry-delay 0 --retry-max-time 300 ${VALIDATOR1_SERVICE_HOST}:8545/liveness"
      containers:
        - name: {{ $nodeNumber }}privacy
          image: {{ .Values.image.besu.repository }}:{{ .Values.image.besu.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VALIDATOR1_PUBKEY
              valueFrom:
                configMapKeyRef:
                  name: {{ template "besu.fullname" . }}-validators-configmap
                  key: validator1PubKey
            - name: VALIDATOR2_PUBKEY
              valueFrom:
                configMapKeyRef:
                  name: {{ template "besu.fullname" . }}-validators-configmap
                  key: validator2PubKey
            - name: VALIDATOR1_SERVICE_HOST
              value: "$({{ template "besu.upperfullname" . }}_VALIDATOR1_SERVICE_HOST)"
            - name: VALIDATOR2_SERVICE_HOST
              value: "$({{ template "besu.upperfullname" . }}_VALIDATOR2_SERVICE_HOST)"
            - name: ORION1_SERVICE_HOST
              value: "$({{ template "besu.upperfullname" . }}_ORION1_SERVICE_HOST)"
          volumeMounts:
            - name: orion-pubkey
              mountPath: /configs/orion
              readOnly: true
            - name: genesis-config
              mountPath: /etc/genesis
              readOnly: true
            - name: config-toml
              mountPath: /etc/besu
              readOnly: true
            - name: data
              mountPath: /data
          ports:
            - name: json-rpc
              containerPort: {{ .Values.besuConfig.rpc.port }}
              protocol: TCP
            - name: ws
              containerPort: {{ .Values.besuConfig.ws.port }}
              protocol: TCP
            - name: graphql
              containerPort: {{ .Values.besuConfig.graphql.port }}
              protocol: TCP
            - name: rlpx
              containerPort: {{ .Values.besuConfig.p2p.port }}
              protocol: TCP
            - name: discovery
              containerPort: {{ .Values.besuConfig.p2p.port }}
              protocol: UDP
            - name: metrics
              containerPort: {{ .Values.besuConfig.metrics.port }}
              protocol: TCP
          command:
            - /bin/sh
            - -c
          args:
            - |
              exec /opt/besu/bin/besu \
                --config-file=/etc/besu/config.toml \
                --privacy-enabled=true \
                --privacy-url=http://${ORION1_SERVICE_HOST}:8888 \
                --privacy-public-key-file=/configs/orion/orion.pub \
                --bootnodes=enode://${VALIDATOR1_PUBKEY}@${VALIDATOR1_SERVICE_HOST}:30303,enode://${VALIDATOR2_PUBKEY}@${VALIDATOR2_SERVICE_HOST}:30303
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8545
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8545
            initialDelaySeconds: 120
            periodSeconds: 30                     
      volumes:
        - name: genesis-config
          configMap:
            name: {{ template "besu.fullname" . }}-genesis-configmap
            items:
              - key: genesis.json
                path: genesis.json
        - name: orion-pubkey
          configMap:
            name: {{ template "besu.fullname" . }}-orion-configmap
            items:
              - key: orion1PubKey
                path: orion.pub
        - name: config-toml
          configMap:
            name: {{ template "besu.fullname" . }}-config-toml-configmap
        - name: data
          emptyDir:
            sizeLimit: "{{ .Values.node.pvcSizeLimit }}"
