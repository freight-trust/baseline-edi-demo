{{- $orionNumber := "orion2" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $orionNumber }}-sa
  namespace: {{ .Values.namespace.members }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ $orionNumber }}-key-read-role
  namespace: {{ .Values.namespace.members }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: [ {{ template "besu.fullname" . }}-{{ $orionNumber }}-key ]
  verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ $orionNumber }}-rb
  namespace: {{ .Values.namespace.members }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $orionNumber }}-key-read-role
subjects:
- kind: ServiceAccount
  name: {{ $orionNumber }}-sa
  namespace: {{ .Values.namespace.members }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "besu.fullname" . }}-{{ $orionNumber }}
  labels:
    app: {{ template "besu.name" . }}
    chart: {{ template "besu.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ $orionNumber }}
    namespace: {{ .Values.namespace.members }}
  namespace: {{ .Values.namespace.members }}
spec:
  replicas: {{ .Values.node.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "besu.name" . }}
      release: {{ .Release.Name }}
      component: {{ $orionNumber }}
  serviceName: "{{ $orionNumber }}-service"
  template:
    metadata:
      labels:
        app: {{ template "besu.name" . }}
        release: {{ .Release.Name }}
        component: {{ $orionNumber }}
    spec:
      containers:
        - name: {{ $orionNumber }}
          image: {{ .Values.image.orion.repository }}:{{ .Values.image.orion.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              cpu: "{{ .Values.orions.cpuRequest }}"
              memory: "{{ .Values.orions.memRequest }}"
            limits:
              cpu: "{{ .Values.orions.cpuLimit }}"
              memory: "{{ .Values.orions.memLimit }}"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ORION_NODEURL
              value: "http://{{ template "besu.fullname" . }}-{{ $orionNumber }}.$(POD_NAMESPACE).svc.cluster.local:8080/"
            - name: ORION_CLIENTURL
              value: "http://{{ template "besu.fullname" . }}-{{ $orionNumber }}.$(POD_NAMESPACE).svc.cluster.local:8888/"
            - name: ORION_OTHERNODES
              value: "http://{{ template "besu.fullname" . }}-orion1.$(POD_NAMESPACE).svc.cluster.local:8080/"
          volumeMounts:
            - name: key
              mountPath: /secrets
              readOnly: true
            - name: key-password
              mountPath: /passwords
              readOnly: true
            - name: orion-conf
              mountPath: /configs
              readOnly: true
            - name: orion-pubkey
              mountPath: /configs/keys
              readOnly: true
            - name: data
              mountPath: /data
          ports:
            - containerPort: 8888
              name: nodeport
              protocol: TCP
            - containerPort: 8080
              name: clientport
              protocol: TCP
          command:
            - /bin/sh
            - -c
          args:
            - |
              exec /opt/orion/bin/orion /configs/orion.conf
          livenessProbe:
            httpGet:
              path: /upcheck
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /upcheck
              port: 8888
            initialDelaySeconds: 180
            periodSeconds: 30
      volumes:
        - name: orion-conf
          configMap:
            name: {{ template "besu.fullname" . }}-orion-configmap
            items:
              - key: orion.conf
                path: orion.conf
        - name: orion-pubkey
          configMap:
            name: {{ template "besu.fullname" . }}-orion-configmap
            items:
              - key: {{ $orionNumber }}PubKey
                path: orion.pub
        - name: key
          secret:
            secretName: {{ template "besu.fullname" . }}-{{ $orionNumber }}-key-secret
            items:
              - key: {{ $orionNumber }}.key
                path: key
        - name: key-password
          secret:
            secretName: {{ template "besu.fullname" . }}-{{ $orionNumber }}-key-secret
            items:
              - key: {{ $orionNumber }}.password
                path: orion.password
        - name: data
          emptyDir:
            sizeLimit: "{{ .Values.orions.pvcSizeLimit }}"